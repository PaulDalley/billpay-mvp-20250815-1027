"use client";
import { useEffect, useState } from "react";

type Profile = { connected: boolean; profile?: { displayName?: string; userPrincipalName?: string; mail?: string } };
type InboxItem = { id: string; subject: string; from: string; received: string; hasAttachments: boolean; webLink: string; score?: number };

export default function Home() {
  const [prof, setProf] = useState<Profile | null>(null);
  const [sb, setSb] = useState<string>("");
  const [inbox, setInbox] = useState<InboxItem[]>([]);
  const [bills, setBills] = useState<InboxItem[]>([]);
  const [loadingInbox, setLoadingInbox] = useState(false);
  const [loadingBills, setLoadingBills] = useState(false);

  const loadProfile = async () => {
    const r = await fetch("/api/ms/me", { cache: "no-store" });
    if (r.ok) setProf(await r.json());
    else setProf({ connected: false });
  };
  useEffect(() => { loadProfile(); }, []);

  const connect = () => { window.location.href = "/api/ms/connect"; };
  const signout = async () => { await fetch("/api/ms/signout", { method: "POST" }); setProf({ connected: false }); setInbox([]); setBills([]); };

  const checkSupabase = async () => {
    const r = await fetch("/api/health/supabase", { cache: "no-store" });
    setSb(await r.text());
  };

  const refreshInbox = async () => {
    setLoadingInbox(true);
    try {
      const r = await fetch("/api/inbox?top=10", { cache: "no-store" });
      const j = await r.json();
      setInbox(j.items || []);
    } finally { setLoadingInbox(false); }
  };

  const findBills = async () => {
    setLoadingBills(true);
    try {
      const r = await fetch("/api/inbox/bills?top=30", { cache: "no-store" });
      const j = await r.json();
      setBills(j.items || []);
    } finally { setLoadingBills(false); }
  };

  const label = prof?.connected
    ? `Connected as ${prof?.profile?.displayName || ""} (${prof?.profile?.mail || prof?.profile?.userPrincipalName || ""})`
    : "Not connected";

  return (
    <main className="min-h-screen bg-gray-50 p-6 flex items-center justify-center">
      <div className="w-full max-w-4xl bg-white shadow-xl rounded-2xl p-8 space-y-6">
        <h1 className="text-4xl font-bold text-blue-600 text-center">Bill Concierge MVP</h1>
        <p className="text-gray-600 text-center">Your central hub for all property bills — fetch, view, and manage from one place.</p>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div className="rounded-xl border p-5 space-y-3">
            <h2 className="font-semibold text-lg">Microsoft</h2>
            <p className="text-sm text-gray-600">{label}</p>
            <div className="flex flex-wrap gap-3">
              {!prof?.connected ? (
                <button onClick={connect} className="flex-1 bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2.5 rounded-lg">Connect</button>
              ) : (
                <>
                  <button onClick={refreshInbox} className="flex-1 bg-purple-600 hover:bg-purple-700 text-white font-semibold py-2.5 rounded-lg" disabled={loadingInbox}>
                    {loadingInbox ? "Loading…" : "Refresh Inbox"}
                  </button>
                  <button onClick={findBills} className="flex-1 bg-amber-600 hover:bg-amber-700 text-white font-semibold py-2.5 rounded-lg" disabled={loadingBills}>
                    {loadingBills ? "Finding…" : "Find Bills"}
                  </button>
                  <button onClick={signout} className="bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2.5 px-4 rounded-lg">Sign out</button>
                </>
              )}
            </div>
          </div>

          <div className="rounded-xl border p-5 space-y-3">
            <h2 className="font-semibold text-lg">Supabase Health</h2>
            <button onClick={checkSupabase} className="bg-green-600 hover:bg-green-700 text-white font-semibold py-2.5 px-4 rounded-lg">Check</button>
            {sb && <pre className="text-xs bg-gray-50 p-3 rounded-lg overflow-auto max-h-48 whitespace-pre-wrap">{sb}</pre>}
          </div>
        </div>

        <div className="rounded-xl border p-5">
          <h2 className="font-semibold text-lg mb-3">Likely Bills</h2>
          {bills.length === 0 ? (
            <p className="text-sm text-gray-500">Click <b>Find Bills</b> to scan your inbox for invoices/statements.</p>
          ) : (
            <ul className="divide-y">
              {bills.map(m => (
                <li key={m.id} className="py-3 flex items-start justify-between gap-4">
                  <div>
                    <div className="font-medium">
                      {m.subject || "(no subject)"}{" "}
                      {typeof m.score==="number" && <span className="ml-2 text-[10px] bg-amber-100 text-amber-800 px-2 py-0.5 rounded">score {m.score}</span>}
                    </div>
                    <div className="text-xs text-gray-500">{m.from} • {new Date(m.received).toLocaleString()}</div>
                    {m.hasAttachments && <span className="mt-1 inline-block text-[10px] px-2 py-0.5 bg-yellow-100 text-yellow-800 rounded">Attachments</span>}
                  </div>
                  <a className="text-sm text-blue-600 hover:underline" href={m.webLink} target="_blank" rel="noreferrer">Open</a>
                </li>
              ))}
            </ul>
          )}
        </div>

        <div className="rounded-xl border p-5">
          <h2 className="font-semibold text-lg mb-3">Latest Messages</h2>
          {inbox.length === 0 ? (
            <p className="text-sm text-gray-500">No messages loaded. Click <b>Refresh Inbox</b>.</p>
          ) : (
            <ul className="divide-y">
              {inbox.map(m => (
                <li key={m.id} className="py-3 flex items-start justify-between gap-4">
                  <div>
                    <div className="font-medium">{m.subject || "(no subject)"}</div>
                    <div className="text-xs text-gray-500">{m.from} • {new Date(m.received).toLocaleString()}</div>
                    {m.hasAttachments && <span className="mt-1 inline-block text-[10px] px-2 py-0.5 bg-yellow-100 text-yellow-800 rounded">Attachments</span>}
                  </div>
                  <a className="text-sm text-blue-600 hover:underline" href={m.webLink} target="_blank" rel="noreferrer">Open</a>
                </li>
              ))}
            </ul>
          )}
        </div>

        <p className="text-xs text-gray-500 text-center">To enable sign-in: set MS_CLIENT_ID / MS_CLIENT_SECRET and add the redirect URI in Azure.</p>
      </div>
    </main>
  );
}
